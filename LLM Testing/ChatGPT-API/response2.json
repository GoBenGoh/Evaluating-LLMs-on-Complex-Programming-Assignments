{  "id": "chatcmpl-7RFjhooxjFil2tWdrdMfBouBtxn9u",
  "object": "chat.completion",
  "created": 1686729701,
  "model": "gpt-3.5-turbo-0301",
  "usage": {
    "prompt_tokens": 2961,
    "completion_tokens": 602,
    "total_tokens": 3563
  },
  "choices": [    {
    "message":
    {
      "role": "assistant",
      "content": "package nz.ac.auckland.se281;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class InsuranceSystem {\n    private List<ClientProfile> profiles = new ArrayList<>();\n\n    public InsuranceSystem() {\n        // Only this constructor can be used (if you need to initialise fields).\n    }\n\n    public void printDatabase() {\n        if (profiles.isEmpty()) {\n            MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"0\", \"s\", \".\");\n        } else if (profiles.size() == 1) {\n            MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"1\", \"\", \":\");\n            MessageCli.PRINT_DB_PROFILE_HEADER_MINIMAL.printMessage();\n            profiles.get(0).printProfile();\n        } else {\n            MessageCli.PRINT_DB_POLICY_COUNT.printMessage(String.valueOf(profiles.size()), \"s\", \":\");\n            MessageCli.PRINT_DB_PROFILE_HEADER_MINIMAL.printMessage();\n            for (int i = 0; i < profiles.size(); i++) {\n                System.out.printf(\" %d: \", i + 1);\n                profiles.get(i).printProfile();\n            }\n        }\n    }\n\n    public void createNewProfile(String userName, String age) {\n        if (userName.length() < 3) {\n            System.out.printf(\"'%s' is an invalid username, it should be at least 3 characters long. No profile was created.%n\", userName);\n        } else if (!isUnique(userName)) {\n            System.out.printf(\"Usernames must be unique. No profile was created for '%s'.%n\", userName);\n        } else {\n            try {\n                int ageInt = Integer.parseInt(age);\n                if (ageInt <= 0) {\n                    System.out.printf(\"'%d' is an invalid age, please provide a positive whole number only. No profile was created for %s.%n\", ageInt, userName);\n                } else {\n                    ClientProfile newProfile = new ClientProfile(userName, ageInt);\n                    profiles.add(newProfile);\n                    System.out.printf(\"New profile created for %s with age %d.%n\", newProfile.getUsername(), newProfile.getAge());\n                }\n            } catch (NumberFormatException e) {\n                System.out.printf(\"'%s' is an invalid age, please provide a positive whole number only. No profile was created for %s.%n\", age, userName);\n            }\n        }\n    }\n\n    public void loadProfile(String userName) {\n        // TODO: Complete this method.\n    }\n\n    public void unloadProfile() {\n        // TODO: Complete this method.\n    }\n\n    public void deleteProfile(String userName) {\n        // TODO: Complete this method.\n    }\n\n    public void createPolicy(Main.PolicyType type, String[] options) {\n        // TODO: Complete this method.\n    }\n\n    private boolean isUnique(String userName) {\n        for (ClientProfile profile : profiles) {\n            if (profile.getUsername().equalsIgnoreCase(userName)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}"
    },
    "finish_reason": "stop",
    "index": 0
  }  ]
}
