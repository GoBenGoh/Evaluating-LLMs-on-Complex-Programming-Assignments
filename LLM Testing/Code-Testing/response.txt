{  "id": "chatcmpl-7TkWvrXLXtmhh25ymYS35benIgPym",  "object": "chat.completion",  "created": 1687324729,  "model": "gpt-3.5-turbo-16k-0613",  "choices": [    {      "index": 0,      "message": {        "role": "assistant",        "content": "Here's the updated code:\n\n```java\npackage nz.ac.auckland.se281;\n\nimport nz.ac.auckland.se281.Main.PolicyType;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class InsuranceSystem {\n  private List<ClientProfile> database;\n  private ClientProfile loadedProfile;\n\n  public InsuranceSystem() {\n    database = new ArrayList<>();\n    loadedProfile = null;\n  }\n\n  public void printDatabase() {\n    if (database.isEmpty()) {\n      MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"0\", \"s\", \".\");\n    } else {\n      int count = database.size();\n      MessageCli.PRINT_DB_POLICY_COUNT.printMessage(String.valueOf(count), count > 1 ? \"s\" : \"\", \":\");\n      for (int i = 0; i < count; i++) {\n        printProfile(database.get(i), i + 1);\n      }\n    }\n  }\n\n  public void createNewProfile(String userName, String age) {\n    if (!isUsernameValid(userName)) {\n      MessageCli.INVALID_USERNAME_TOO_SHORT.printMessage(capitalizeFirstLetter(userName));\n    } else if (!isUsernameUnique(userName)) {\n      MessageCli.INVALID_USERNAME_NOT_UNIQUE.printMessage(capitalizeFirstLetter(userName));\n    } else if (!isAgeValid(age)) {\n      MessageCli.INVALID_AGE.printMessage(age, capitalizeFirstLetter(userName));\n    } else {\n      int parsedAge = Integer.parseInt(age);\n      ClientProfile newProfile = new ClientProfile(capitalizeFirstLetter(userName), parsedAge);\n      database.add(newProfile);\n      MessageCli.PROFILE_CREATED.printMessage(capitalizeFirstLetter(userName), age);\n    }\n  }\n\n  public void loadProfile(String userName) {\n    ClientProfile profile = findProfileByUsername(userName);\n    if (profile != null) {\n      setLoadedProfile(profile);\n      MessageCli.PROFILE_LOADED.printMessage(capitalizeFirstLetter(userName));\n    } else {\n      MessageCli.NO_PROFILE_FOUND_TO_LOAD.printMessage(capitalizeFirstLetter(userName));\n    }\n  }\n\n  public void unloadProfile() {\n    if (isProfileLoaded()) {\n      MessageCli.PROFILE_UNLOADED.printMessage(getLoadedProfile().getUsername());\n      setLoadedProfile(null);\n    } else {\n      MessageCli.NO_PROFILE_LOADED.printMessage();\n    }\n  }\n\n  public void deleteProfile(String userName) {\n    ClientProfile profile = findProfileByUsername(userName);\n    if (profile == null) {\n      MessageCli.NO_PROFILE_FOUND_TO_DELETE.printMessage(capitalizeFirstLetter(userName));\n    } else if (isProfileLoaded() && getLoadedProfile().equals(profile)) {\n      MessageCli.CANNOT_DELETE_PROFILE_WHILE_LOADED.printMessage(capitalizeFirstLetter(userName));\n    } else {\n      database.remove(profile);\n      MessageCli.PROFILE_DELETED.printMessage(capitalizeFirstLetter(userName));\n    }\n  }\n\n  public void createPolicy(PolicyType type, String[] options) {\n    if (!isProfileLoaded()) {\n      MessageCli.NO_PROFILE_FOUND_TO_CREATE_POLICY.printMessage();\n      return;\n    }\n\n    switch (type) {\n      case HOME:\n        createHomePolicy(options);\n        break;\n      case CAR:\n        createCarPolicy(options);\n        break;\n      case LIFE:\n        createLifePolicy(options);\n        break;\n    }\n  }\n\n  private boolean isUsernameValid(String username) {\n    return username.length() >= 3;\n  }\n\n  private boolean isUsernameUnique(String username) {\n    for (ClientProfile profile : database) {\n      if (profile.getUsername().equalsIgnoreCase(capitalizeFirstLetter(username))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private boolean isAgeValid(String age) {\n    try {\n      int parsedAge = Integer.parseInt(age);\n      return parsedAge > 0;\n    } catch (NumberFormatException e) {\n      return false;\n    }\n  }\n\n  private String capitalizeFirstLetter(String name) {\n    String[] words = name.split(\" \");\n    StringBuilder capitalized = new StringBuilder();\n    for (String word : words) {\n      capitalized.append(Character.toUpperCase(word.charAt(0)));\n      capitalized.append(word.substring(1).toLowerCase());\n      capitalized.append(\" \");\n    }\n    return capitalized.toString().trim();\n  }\n\n  private ClientProfile findProfileByUsername(String username) {\n    for (ClientProfile profile : database) {\n      if (profile.getUsername().equalsIgnoreCase(capitalizeFirstLetter(username))) {\n        return profile;\n      }\n    }\n    return null;\n  }\n\n  private boolean isProfileLoaded() {\n    return loadedProfile != null;\n  }\n\n  private ClientProfile getLoadedProfile() {\n    return loadedProfile;\n  }\n\n  private void setLoadedProfile(ClientProfile profile) {\n    loadedProfile = profile;\n  }\n\n  private void printProfile(ClientProfile profile, int rank) {\n    String prefix = \"\";\n    if (isProfileLoaded() && profile.equals(getLoadedProfile())) {\n      prefix = \"*** \";\n    }\n    System.out.printf(\" %s%d: %s, %d\\n\", prefix, rank, profile.getUsername(), profile.getAge());\n  }\n\n  private void createHomePolicy(String[] options) {\n    // TODO: Implement this method.\n  }\n\n  private void createCarPolicy(String[] options) {\n    // TODO: Implement this method.\n  }\n\n  private void createLifePolicy(String[] options) {\n    // TODO: Implement this method.\n  }\n}\n\nclass ClientProfile {\n  private String username;\n  private int age;\n\n  public ClientProfile(String username, int age) {\n    this.username = username;\n    this.age = age;\n  }\n\n  public String getUsername() {\n    return username;\n  }\n\n  public int getAge() {\n    return age;\n  }\n}\n```\n\nExplanation of changes made:\n\n1. Updated `printDatabase()` method to remove the check for a single profile and simplified the code to print all profiles.\n2. Updated `loadProfile()` method to remove the check for a loaded profile and simplified the code to load the profile if found.\n3. Updated `deleteProfile()` method to remove the unnecessary check for a loaded profile and simplified the code to delete the profile if found.\n4. Removed the `loaded` field from the `ClientProfile` class as it is no longer needed. The loaded profile is now stored directly in the `InsuranceSystem` class.\n5. Updated the `setLoadedProfile()` method to directly set the loaded profile in the `InsuranceSystem` class.\n6. Updated the `printProfile()` method to add the `***` prefix to the currently loaded profile."      },      "finish_reason": "stop"    }  ],  "usage": {    "prompt_tokens": 4792,    "completion_tokens": 1303,    "total_tokens": 6095  }}
