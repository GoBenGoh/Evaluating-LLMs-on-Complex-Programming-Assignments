{  "id": "chatcmpl-7TRrToadbJVlYAhXep5Ig9xY5OLT7",  "object": "chat.completion",  "created": 1687252967,  "model": "gpt-3.5-turbo-16k-0613",  "choices": [    {      "index": 0,      "message": {        "role": "assistant",        "content": "Here is the updated code:\n\n```java\npackage nz.ac.auckland.se281;\n\nimport nz.ac.auckland.se281.Main.PolicyType;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class InsuranceSystem {\n  private List<ClientProfile> database;\n  private ClientProfile loadedProfile;\n\n  public InsuranceSystem() {\n    this.database = new ArrayList<>();\n    this.loadedProfile = null;\n  }\n\n  public void printDatabase() {\n    if (database.isEmpty()) {\n      MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"0\", \"s\", \".\");\n    } else if (database.size() == 1) {\n      MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"1\", \"\", \":\");\n      MessageCli.PRINT_DB_PROFILE_HEADER_MINIMAL.printMessage(\"1\", database.get(0).getUsername(), String.valueOf(database.get(0).getAge()));\n    } else {\n      MessageCli.PRINT_DB_POLICY_COUNT.printMessage(String.valueOf(database.size()), \"s\", \":\");\n      for (int i = 0; i < database.size(); i++) {\n        if (database.get(i) == loadedProfile) {\n          MessageCli.PRINT_DB_PROFILE_HEADER_SHORT.printMessage(\"*** \", String.valueOf(i + 1), database.get(i).getUsername(), String.valueOf(database.get(i).getAge()));\n        } else {\n          MessageCli.PRINT_DB_PROFILE_HEADER_SHORT.printMessage(\"\", String.valueOf(i + 1), database.get(i).getUsername(), String.valueOf(database.get(i).getAge()));\n        }\n      }\n    }\n  }\n\n  public void createNewProfile(String userName, String age) {\n    if (!isUniqueUsername(userName)) {\n      MessageCli.INVALID_USERNAME_NOT_UNIQUE.printMessage(userName);\n    } else if (userName.length() < 3) {\n      MessageCli.INVALID_USERNAME_TOO_SHORT.printMessage(userName);\n    } else if (!isPositiveInteger(age)) {\n      MessageCli.INVALID_AGE.printMessage(age, userName);\n    } else {\n      String formattedUserName = toTitleCase(userName);\n      int formattedAge = Integer.parseInt(age);\n      ClientProfile newProfile = new ClientProfile(formattedUserName, formattedAge);\n      database.add(newProfile);\n      MessageCli.PROFILE_CREATED.printMessage(formattedUserName, String.valueOf(formattedAge));\n    }\n  }\n\n  public void loadProfile(String userName) {\n    if (loadedProfile != null) {\n      MessageCli.CANNOT_CREATE_WHILE_LOADED.printMessage(loadedProfile.getUsername());\n    } else {\n      ClientProfile profile = findProfileByUsername(userName);\n      if (profile == null) {\n        MessageCli.NO_PROFILE_FOUND_TO_LOAD.printMessage(userName);\n      } else {\n        loadedProfile = profile;\n        MessageCli.PROFILE_LOADED.printMessage(profile.getUsername());\n      }\n    }\n  }\n\n  public void unloadProfile() {\n    if (loadedProfile == null) {\n      MessageCli.NO_PROFILE_LOADED.printMessage();\n    } else {\n      MessageCli.PROFILE_UNLOADED.printMessage(loadedProfile.getUsername());\n      loadedProfile = null;\n    }\n  }\n\n  public void deleteProfile(String userName) {\n    if (loadedProfile != null && loadedProfile.getUsername().equals(userName)) {\n      MessageCli.CANNOT_DELETE_PROFILE_WHILE_LOADED.printMessage(userName);\n    } else {\n      ClientProfile profile = findProfileByUsername(userName);\n      if (profile == null) {\n        MessageCli.NO_PROFILE_FOUND_TO_DELETE.printMessage(userName);\n      } else {\n        if (loadedProfile == profile) {\n          loadedProfile = null;\n        }\n        database.remove(profile);\n        MessageCli.PROFILE_DELETED.printMessage(userName);\n      }\n    }\n  }\n\n  public void createPolicy(PolicyType type, String[] options) {\n    if (loadedProfile == null) {\n      MessageCli.NO_PROFILE_FOUND_TO_CREATE_POLICY.printMessage();\n    } else {\n      switch (type) {\n        case HOME:\n          createHomePolicy(options);\n          break;\n        case CAR:\n          createCarPolicy(options);\n          break;\n        case LIFE:\n          createLifePolicy(options);\n          break;\n      }\n    }\n  }\n\n  private void createHomePolicy(String[] options) {\n    // TODO: Implement this method.\n  }\n\n  private void createCarPolicy(String[] options) {\n    // TODO: Implement this method.\n  }\n\n  private void createLifePolicy(String[] options) {\n    // TODO: Implement this method.\n  }\n\n  private boolean isUniqueUsername(String userName) {\n    for (ClientProfile profile : database) {\n      if (profile.getUsername().equalsIgnoreCase(userName)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private boolean isPositiveInteger(String str) {\n    try {\n      int num = Integer.parseInt(str);\n      return num > 0;\n    } catch (NumberFormatException e) {\n      return false;\n    }\n  }\n\n  private String toTitleCase(String str) {\n    String[] words = str.split(\" \");\n    StringBuilder result = new StringBuilder();\n    for (String word : words) {\n      result.append(Character.toUpperCase(word.charAt(0))).append(word.substring(1).toLowerCase()).append(\" \");\n    }\n    return result.toString().trim();\n  }\n\n  private ClientProfile findProfileByUsername(String userName) {\n    for (ClientProfile profile : database) {\n      if (profile.getUsername().equalsIgnoreCase(userName)) {\n        return profile;\n      }\n    }\n    return null;\n  }\n}\n\nclass ClientProfile {\n  private String username;\n  private int age;\n\n  public ClientProfile(String username, int age) {\n    this.username = username;\n    this.age = age;\n  }\n\n  public String getUsername() {\n    return username;\n  }\n\n  public int getAge() {\n    return age;\n  }\n}\n```"      },      "finish_reason": "stop"    }  ],  "usage": {    "prompt_tokens": 4814,    "completion_tokens": 1142,    "total_tokens": 5956  }}
