@Test
public void T3_02_add_home_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 1 policy");
    assertContains("New home policy created for Jenny.");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $20000)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Jordan, 21, 0 policies"
	at nz.ac.auckland.se281.MainTest$Task3.T3_02_add_home_policy_loaded_profile(MainTest.java:217)

@Test
public void T3_07_two_policies_one_profile_ignore_zero_policy_total_costs() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, LOAD_PROFILE, "Jenny", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("2: Tom, 25, 2 policies for a total of $22950");
    assertContains("3: Jenny, 23, 1 policy for a total of $8250");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5500 -> $4950)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $8250 -> $8250)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"2: Tom, 25, 2 policies for a total of $22950"
	at nz.ac.auckland.se281.MainTest$Task3.T3_07_two_policies_one_profile_ignore_zero_policy_total_costs(MainTest.java:349)

@Test
public void T3_05_three_policies_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_HOME, options("1000000", "20 Queen Street", "no"), POLICY_LIFE, options("1000000"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 3 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $16000)");
    assertContains("Home Policy (20 Queen Street, Sum Insured: $1000000, Premium: $10000 -> $8000)");
    assertContains("Life Policy (Sum Insured: $1000000, Premium: $12300 -> $9840)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_05_three_policies_one_profile(MainTest.java:292)

@Test
public void T3_03_add_car_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "yes"), PRINT_DB));
    assertContains("Profile loaded for Tom.");
    assertContains("New car policy created for Tom.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("*** 2: Tom, 25, 1 policy");
    assertContains("3: Jenny, 23, 0 policies");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5580 -> $5580)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New car policy created for Tom."
	at nz.ac.auckland.se281.MainTest$Task3.T3_03_add_car_policy_loaded_profile(MainTest.java:239)

@Test
public void T3_06_life_policy_over_age_limit() throws Exception {
    runCommands(CREATE_PROFILE, "Jenny", 101, LOAD_PROFILE, "Jenny", POLICY_LIFE, options("100000"), UNLOAD_PROFILE, PRINT_DB);
    assertContains("Profile loaded for Jenny.");
    assertContains("Jenny is over the age limit. No policy was created.");
    assertContains("Database has 1 profile:");
    assertContains("1: Jenny, 101, 0 policies");
    assertDoesNotContain("New life policy created for Jenny.", true);
    assertDoesNotContain("Life Policy (Sum Insured", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Jenny, 101, 0 policies"
	at nz.ac.auckland.se281.MainTest$Task3.T3_06_life_policy_over_age_limit(MainTest.java:324)

@Test
public void T3_04_two_different_policies_home_life_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_LIFE, options("1000000"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 2 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Life Policy (Sum Insured: $1000000, Premium: $12300 -> $11070)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_04_two_different_policies_home_life_one_profile(MainTest.java:263)

@Test
public void T3_xx_two_life_policies_two_profiles() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_LIFE, options("100000"), UNLOAD_PROFILE, LOAD_PROFILE, "Tom", POLICY_LIFE, options("500000"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Profile loaded for Tom.");
    assertContains("New life policy created for Tom.");
    assertDoesNotContain("already has a life policy", true);
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 1 policy");
    assertContains("3: Jenny, 23, 1 policy");
    assertContains("Life Policy (Sum Insured: $100000, Premium: $1230 -> $1230)");
    assertContains("Life Policy (Sum Insured: $500000, Premium: $6250 -> $6250)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New life policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_life_policies_two_profiles(MainTest.java:755)

@Test
public void T3_xx_three_policies_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_HOME, options("1000000", "20 Queen Street", "no"), POLICY_LIFE, options("1000000"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 3 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $16000)");
    assertContains("Home Policy (20 Queen Street, Sum Insured: $1000000, Premium: $10000 -> $8000)");
    assertContains("Life Policy (Sum Insured: $1000000, Premium: $12300 -> $9840)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_three_policies_one_profile(MainTest.java:663)

@Test
public void T3_xx_two_different_policies_home_life_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_LIFE, options("1000000"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 2 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Life Policy (Sum Insured: $1000000, Premium: $12300 -> $11070)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_different_policies_home_life_one_profile(MainTest.java:634)

@Test
public void T3_xx_two_policies_two_profiles() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), UNLOAD_PROFILE, LOAD_PROFILE, "Jenny", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("Profile loaded for Tom.");
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Tom.");
    assertContains("New car policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 1 policy");
    assertContains("3: Jenny, 23, 1 policy");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $20000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $8250 -> $8250)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Tom."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_policies_two_profiles(MainTest.java:697)

@Test
public void T3_xx_add_car_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "yes"), PRINT_DB));
    assertContains("Profile loaded for Tom.");
    assertContains("New car policy created for Tom.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("*** 2: Tom, 25, 1 policy");
    assertContains("3: Jenny, 23, 0 policies");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5580 -> $5580)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New car policy created for Tom."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_add_car_policy_loaded_profile(MainTest.java:561)

@Test
public void T3_xx_life_policy_over_age_limit() throws Exception {
    runCommands(CREATE_PROFILE, "Jenny", 101, LOAD_PROFILE, "Jenny", POLICY_LIFE, options("100000"), UNLOAD_PROFILE, PRINT_DB);
    assertContains("Profile loaded for Jenny.");
    assertContains("Jenny is over the age limit. No policy was created.");
    assertContains("Database has 1 profile:");
    assertContains("1: Jenny, 101, 0 policies");
    assertDoesNotContain("New life policy created for Jenny.", true);
    assertDoesNotContain("Life Policy (Sum Insured", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Jenny, 101, 0 policies"
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_life_policy_over_age_limit(MainTest.java:787)

@Test
public void T3_xx_two_policies_one_profile_ignore_zero_policy_total_costs() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, LOAD_PROFILE, "Jenny", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("2: Tom, 25, 2 policies for a total of $22950");
    assertContains("3: Jenny, 23, 1 policy for a total of $8250");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5500 -> $4950)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $8250 -> $8250)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"2: Tom, 25, 2 policies for a total of $22950"
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_policies_one_profile_ignore_zero_policy_total_costs(MainTest.java:850)

@Test
public void T3_xx_add_home_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 1 policy");
    assertContains("New home policy created for Jenny.");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $20000)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Jordan, 21, 0 policies"
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_add_home_policy_loaded_profile(MainTest.java:539)

@Test
public void T3_xx_five_policies_two_profiles_total_costs() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), POLICY_CAR, options("50000", "Toyota Prius", "TOY456", "yes"), UNLOAD_PROFILE, LOAD_PROFILE, "Jenny", POLICY_CAR, options("55000", "Subaru Forester", "SUB456", "no"), POLICY_CAR, options("55000", "Toyota Camry", "TOY987", "no"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("1: Jordan, 21, 0 policies for a total of $0");
    assertContains("2: Tom, 25, 3 policies for a total of $24464");
    assertContains("3: Jenny, 23, 2 policies for a total of $14850");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $16000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5500 -> $4400)");
    assertContains("Car Policy (Toyota Prius, Sum Insured: $50000, Premium: $5080 -> $4064)");
    assertContains("Car Policy (Subaru Forester, Sum Insured: $55000, Premium: $8250 -> $7425)");
    assertContains("Car Policy (Toyota Camry, Sum Insured: $55000, Premium: $8250 -> $7425)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Jordan, 21, 0 policies for a total of $0"
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_five_policies_two_profiles_total_costs(MainTest.java:882)

@Test
public void T3_xx_add_life_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jordan", POLICY_LIFE, options("80000"), PRINT_DB));
    assertContains("Profile loaded for Jordan.");
    assertContains("New life policy created for Jordan.");
    assertContains("Database has 3 profiles:");
    assertContains("*** 1: Jordan, 21, 1 policy");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("3: Jenny, 23, 0 policies");
    assertContains("Life Policy (Sum Insured: $80000, Premium: $968 -> $968)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New life policy created for Jordan."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_add_life_policy_loaded_profile(MainTest.java:583)

@Test
public void T3_xx_two_different_policies_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New car policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 2 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $8250 -> $7425)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_different_policies_one_profile(MainTest.java:607)

@Test
public void T3_xx_two_life_policies_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_LIFE, options("100000"), POLICY_LIFE, options("500000"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Jenny already has a life policy. No new policy was created.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("3: Jenny, 23, 1 policy");
    assertContains("Life Policy (Sum Insured: $100000, Premium: $1230 -> $1230)");
    assertDoesNotContain("Life Policy (Sum Insured: $500000", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New life policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_life_policies_one_profile(MainTest.java:725)

@Test
public void T3_xx_two_policies_two_profiles_deleted_profile_total_costs() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jordan", POLICY_HOME, options("500000", "Queen Street", "yes"), POLICY_HOME, options("500000", "Another Street", "yes"), UNLOAD_PROFILE, LOAD_PROFILE, "Tom", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), UNLOAD_PROFILE, LOAD_PROFILE, "Jenny", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, DELETE_PROFILE, "Jordan", PRINT_DB));
    assertDoesNotContain("2 policies", true);
    assertContains("1: Tom, 25, 1 policy for a total of $20000");
    assertContains("2: Jenny, 23, 1 policy for a total of $8250");
    assertContains("New home policy created for Jordan.");
    assertDoesNotContain("Home Policy (Queen Street");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $20000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $8250 -> $8250)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Tom, 25, 1 policy for a total of $20000"
	at nz.ac.auckland.se281.MainTest$Task3.T3_xx_two_policies_two_profiles_deleted_profile_total_costs(MainTest.java:820)

