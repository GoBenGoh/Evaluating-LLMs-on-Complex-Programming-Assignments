{  "id": "chatcmpl-7c2EsYU2mo6CY3HrYwE0Re9kzmWSM",  "object": "chat.completion",  "created": 1689299426,  "model": "gpt-3.5-turbo-16k-0613",  "choices": [    {      "index": 0,      "message": {        "role": "assistant",        "content": "```java\r\npackage nz.ac.auckland.se281;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class InsuranceSystem {\r\n    private List<ClientProfile> database;\r\n\r\n    public InsuranceSystem() {\r\n        database = new ArrayList<>();\r\n    }\r\n\r\n    public void printDatabase() {\r\n        if (database.isEmpty()) {\r\n            System.out.println(\"Database has 0 profiles.\");\r\n        } else if (database.size() == 1) {\r\n            System.out.println(\"Database has 1 profile:\");\r\n            System.out.println(\" 1: \" + database.get(0).toString());\r\n        } else {\r\n            System.out.println(\"Database has \" + database.size() + \" profiles:\");\r\n            int rank = 1;\r\n            for (ClientProfile profile : database) {\r\n                System.out.println(\" \" + rank + \": \" + profile.toString());\r\n                rank++;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void createNewProfile(String userName, String age) {\r\n        if (userName.length() < 3) {\r\n            System.out.println(\"'\" + userName + \"' is an invalid username, it should be at least 3 characters long. No profile was created.\");\r\n            return;\r\n        }\r\n\r\n        if (!isUniqueUsername(userName)) {\r\n            System.out.println(\"Usernames must be unique. No profile was created for '\" + userName + \"'.\");\r\n            return;\r\n        }\r\n\r\n        int ageInt;\r\n        try {\r\n            ageInt = Integer.parseInt(age);\r\n        } catch (NumberFormatException e) {\r\n            System.out.println(\"'\" + age + \"' is an invalid age, please provide a positive whole number only. No profile was created for \" + userName + \".\");\r\n            return;\r\n        }\r\n\r\n        if (ageInt <= 0) {\r\n            System.out.println(\"'\" + age + \"' is an invalid age, please provide a positive whole number only. No profile was created for \" + userName + \".\");\r\n            return;\r\n        }\r\n\r\n        String formattedUsername = formatUsername(userName);\r\n        ClientProfile newProfile = new ClientProfile(formattedUsername, ageInt);\r\n        database.add(newProfile);\r\n\r\n        System.out.println(\"New profile created for \" + formattedUsername + \" with age \" + age + \".\");\r\n    }\r\n\r\n    public void loadProfile(String userName) {\r\n        ClientProfile profile = findProfile(userName);\r\n        if (profile == null) {\r\n            System.out.println(\"No profile found for \" + userName + \". Profile not loaded.\");\r\n        } else {\r\n            profile.setLoaded(true);\r\n            System.out.println(\"Profile loaded for \" + profile.getUsername() + \".\");\r\n        }\r\n    }\r\n\r\n    public void unloadProfile() {\r\n        ClientProfile loadedProfile = findLoadedProfile();\r\n        if (loadedProfile == null) {\r\n            System.out.println(\"No profile is currently loaded.\");\r\n        } else {\r\n            loadedProfile.setLoaded(false);\r\n            System.out.println(\"Profile unloaded for \" + loadedProfile.getUsername() + \".\");\r\n        }\r\n    }\r\n\r\n    public void deleteProfile(String userName) {\r\n        ClientProfile profile = findProfile(userName);\r\n        if (profile == null) {\r\n            System.out.println(\"No profile found for \" + userName + \". No profile was deleted.\");\r\n        } else {\r\n            if (profile.isLoaded()) {\r\n                System.out.println(\"Cannot delete profile for \" + profile.getUsername() + \" while loaded. No profile was deleted.\");\r\n            } else {\r\n                database.remove(profile);\r\n                System.out.println(\"Profile deleted for \" + profile.getUsername() + \".\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void createPolicy(Main.PolicyType type, String[] options) {\r\n        ClientProfile loadedProfile = findLoadedProfile();\r\n        if (loadedProfile == null) {\r\n            System.out.println(\"Need to load a profile in order to create a policy.\");\r\n            return;\r\n        }\r\n\r\n        switch (type) {\r\n            case HOME:\r\n                createHomePolicy(loadedProfile, options);\r\n                break;\r\n            case CAR:\r\n                createCarPolicy(loadedProfile, options);\r\n                break;\r\n            case LIFE:\r\n                createLifePolicy(loadedProfile, options);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void createHomePolicy(ClientProfile profile, String[] options) {\r\n        // TODO: Implement this method.\r\n    }\r\n\r\n    private void createCarPolicy(ClientProfile profile, String[] options) {\r\n        // TODO: Implement this method.\r\n    }\r\n\r\n    private void createLifePolicy(ClientProfile profile, String[] options) {\r\n        // TODO: Implement this method.\r\n    }\r\n\r\n    private boolean isUniqueUsername(String userName) {\r\n        for (ClientProfile profile : database) {\r\n            if (profile.getUsername().equalsIgnoreCase(userName)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private String formatUsername(String userName) {\r\n        String[] words = userName.split(\" \");\r\n        StringBuilder formattedName = new StringBuilder();\r\n        for (String word : words) {\r\n            formattedName.append(word.substring(0, 1).toUpperCase()).append(word.substring(1).toLowerCase()).append(\" \");\r\n        }\r\n        return formattedName.toString().trim();\r\n    }\r\n\r\n    private ClientProfile findProfile(String userName) {\r\n        for (ClientProfile profile : database) {\r\n            if (profile.getUsername().equalsIgnoreCase(userName)) {\r\n                return profile;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private ClientProfile findLoadedProfile() {\r\n        for (ClientProfile profile : database) {\r\n            if (profile.isLoaded()) {\r\n                return profile;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n```"      },      "finish_reason": "stop"    }  ],  "usage": {    "prompt_tokens": 7722,    "completion_tokens": 1086,    "total_tokens": 8808  }}
