{  "id": "chatcmpl-7abr3mSVHdUokIHFflzV5D6AY053R",  "object": "chat.completion",  "created": 1688959677,  "model": "gpt-3.5-turbo-16k-0613",  "choices": [    {      "index": 0,      "message": {        "role": "assistant",        "content": "```\rpackage nz.ac.auckland.se281;\r\n\r\nimport nz.ac.auckland.se281.Main.PolicyType;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class InsuranceSystem {\r\n    private List<ClientProfile> database;\r\n\r\n    public InsuranceSystem() {\r\n        database = new ArrayList<>();\r\n    }\r\n\r\n    public void printDatabase() {\r\n        if (database.isEmpty()) {\r\n            MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"0\", \"s\", \".\");\r\n        } else if (database.size() == 1) {\r\n            MessageCli.PRINT_DB_POLICY_COUNT.printMessage(\"1\", \"\", \":\");\r\n            printProfile(database.get(0), 1);\r\n        } else {\r\n            MessageCli.PRINT_DB_POLICY_COUNT.printMessage(String.valueOf(database.size()), \"s\", \":\");\r\n            for (int i = 0; i < database.size(); i++) {\r\n                printProfile(database.get(i), i + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void printProfile(ClientProfile profile, int rank) {\r\n        MessageCli.PRINT_DB_PROFILE_HEADER_MINIMAL.printMessage(String.valueOf(rank), profile.getUsername(), String.valueOf(profile.getAge()));\r\n    }\r\n\r\n    public void createNewProfile(String userName, String age) {\r\n        if (userName.length() < 3) {\r\n            MessageCli.INVALID_USERNAME_TOO_SHORT.printMessage(userName);\r\n            return;\r\n        }\r\n\r\n        int parsedAge;\r\n        try {\r\n            parsedAge = Integer.parseInt(age);\r\n        } catch (NumberFormatException e) {\r\n            MessageCli.INVALID_AGE.printMessage(age, userName);\r\n            return;\r\n        }\r\n\r\n        if (parsedAge <= 0) {\r\n            MessageCli.INVALID_AGE.printMessage(age, userName);\r\n            return;\r\n        }\r\n\r\n        for (ClientProfile profile : database) {\r\n            if (profile.getUsername().equalsIgnoreCase(userName)) {\r\n                MessageCli.INVALID_USERNAME_NOT_UNIQUE.printMessage(userName);\r\n                return;\r\n            }\r\n        }\r\n\r\n        ClientProfile newProfile = new ClientProfile(capitalizeName(userName), parsedAge);\r\n        database.add(newProfile);\r\n        MessageCli.PROFILE_CREATED.printMessage(newProfile.getUsername(), String.valueOf(newProfile.getAge()));\r\n    }\r\n\r\n    private String capitalizeName(String name) {\r\n        String[] words = name.split(\" \");\r\n        StringBuilder sb = new StringBuilder();\r\n        for (String word : words) {\r\n            sb.append(Character.toUpperCase(word.charAt(0)));\r\n            sb.append(word.substring(1).toLowerCase());\r\n            sb.append(\" \");\r\n        }\r\n        return sb.toString().trim();\r\n    }\r\n\r\n    public void loadProfile(String userName) {\r\n        ClientProfile profile = findProfile(userName);\r\n        if (profile == null) {\r\n            MessageCli.NO_PROFILE_FOUND_TO_LOAD.printMessage(userName);\r\n        } else if (profile.isLoaded()) {\r\n            MessageCli.PROFILE_LOADED.printMessage(profile.getUsername());\r\n        } else {\r\n            profile.setLoaded(true);\r\n            MessageCli.PROFILE_LOADED.printMessage(profile.getUsername());\r\n        }\r\n    }\r\n\r\n    public void unloadProfile() {\r\n        ClientProfile loadedProfile = findLoadedProfile();\r\n        if (loadedProfile == null) {\r\n            MessageCli.NO_PROFILE_LOADED.printMessage();\r\n        } else {\r\n            loadedProfile.setLoaded(false);\r\n            MessageCli.PROFILE_UNLOADED.printMessage(loadedProfile.getUsername());\r\n        }\r\n    }\r\n\r\n    public void deleteProfile(String userName) {\r\n        ClientProfile profile = findProfile(userName);\r\n        if (profile == null) {\r\n            MessageCli.NO_PROFILE_FOUND_TO_DELETE.printMessage(userName);\r\n        } else if (profile.isLoaded()) {\r\n            MessageCli.CANNOT_DELETE_PROFILE_WHILE_LOADED.printMessage(profile.getUsername());\r\n        } else {\r\n            database.remove(profile);\r\n            MessageCli.PROFILE_DELETED.printMessage(profile.getUsername());\r\n        }\r\n    }\r\n\r\n    public void createPolicy(PolicyType type, String[] options) {\r\n        ClientProfile loadedProfile = findLoadedProfile();\r\n        if (loadedProfile == null) {\r\n            MessageCli.NO_PROFILE_FOUND_TO_CREATE_POLICY.printMessage();\r\n            return;\r\n        }\r\n\r\n        if (type == PolicyType.LIFE && loadedProfile.hasLifePolicy()) {\r\n            MessageCli.ALREADY_HAS_LIFE_POLICY.printMessage(loadedProfile.getUsername());\r\n            return;\r\n        }\r\n\r\n        if (type == PolicyType.LIFE && loadedProfile.getAge() >= 65) {\r\n            MessageCli.OVER_AGE_LIMIT_LIFE_POLICY.printMessage(loadedProfile.getUsername());\r\n            return;\r\n        }\r\n\r\n        switch (type) {\r\n            case HOME:\r\n                createHomePolicy(loadedProfile, options);\r\n                break;\r\n            case CAR:\r\n                createCarPolicy(loadedProfile, options);\r\n                break;\r\n            case LIFE:\r\n                createLifePolicy(loadedProfile, options);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void createHomePolicy(ClientProfile profile, String[] options) {\r\n        double sumInsured = Double.parseDouble(options[0]);\r\n        boolean isRental = options[1].equalsIgnoreCase(\"y\");\r\n        HomePolicy homePolicy = new HomePolicy(profile, sumInsured, isRental);\r\n        profile.addPolicy(homePolicy);\r\n        MessageCli.NEW_POLICY_CREATED.printMessage(\"home\", profile.getUsername());\r\n    }\r\n\r\n    private void createCarPolicy(ClientProfile profile, String[] options) {\r\n        double sumInsured = Double.parseDouble(options[0]);\r\n        String makeAndModel = options[1];\r\n        String licensePlate = options[2];\r\n        boolean hasMechanicalWarranty = options[3].equalsIgnoreCase(\"y\");\r\n        CarPolicy carPolicy = new CarPolicy(profile, sumInsured, makeAndModel, licensePlate, hasMechanicalWarranty);\r\n        profile.addPolicy(carPolicy);\r\n        MessageCli.NEW_POLICY_CREATED.printMessage(\"car\", profile.getUsername());\r\n    }\r\n\r\n    private void createLifePolicy(ClientProfile profile, String[] options) {\r\n        double sumInsured = Double.parseDouble(options[0]);\r\n        LifePolicy lifePolicy = new LifePolicy(profile, sumInsured);\r\n        profile.addPolicy(lifePolicy);\r\n        MessageCli.NEW_POLICY_CREATED.printMessage(\"life\", profile.getUsername());\r\n    }\r\n\r\n    private ClientProfile findProfile(String userName) {\r\n        for (ClientProfile profile : database) {\r\n            if (profile.getUsername().equalsIgnoreCase(userName)) {\r\n                return profile;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private ClientProfile findLoadedProfile() {\r\n        for (ClientProfile profile : database) {\r\n            if (profile.isLoaded()) {\r\n                return profile;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n```"      },      "finish_reason": "stop"    }  ],  "usage": {    "prompt_tokens": 5489,    "completion_tokens": 1268,    "total_tokens": 6757  }}
