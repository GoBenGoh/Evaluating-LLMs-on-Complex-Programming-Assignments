{  "id": "chatcmpl-7yhptt7UMNGGd9HAhxe1iAwjbFpkt",  "object": "chat.completion",  "created": 1694702541,  "model": "gpt-3.5-turbo-16k-0613",  "choices": [    {      "index": 0,      "message": {        "role": "assistant",        "content": "```java\r\npackage nz.ac.auckland.se281;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class InsuranceSystem {\r\n    // Create a static list to represent the database\r\n    private static List<ClientProfile> database = new ArrayList<>();\r\n\r\n    // Implement the printDatabase() method\r\n    public void printDatabase() {\r\n        if (database.size() == 0) {\r\n            System.out.println(\"Database has 0 profiles.\");\r\n        } else if (database.size() == 1) {\r\n            System.out.println(\"Database has 1 profile:\");\r\n            System.out.println(\" 1: \" + database.get(0).getTitleCaseUsername() + \", \" + database.get(0).getAge());\r\n        } else {\r\n            System.out.println(\"Database has \" + database.size() + \" profiles:\");\r\n            for (int i = 0; i < database.size(); i++) {\r\n                System.out.println(\" \" + (i + 1) + \": \" + database.get(i).getTitleCaseUsername() + \", \"\r\n                        + database.get(i).getAge());\r\n            }\r\n        }\r\n    }\r\n\r\n    // Implement the createNewProfile() method\r\n    public void createNewProfile(String userName, String age) {\r\n        // Check if username already exists in the database\r\n        for (ClientProfile profile : database) {\r\n            if (profile.getUsername().equalsIgnoreCase(userName)) {\r\n                System.out.println(\"Usernames must be unique. No profile was created for '\" + userName + \"'.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Check if username is at least 3 characters long\r\n        if (userName.length() < 3) {\r\n            System.out.println(\r\n                    \"'\" + userName + \"' is an invalid username, it should be at least 3 characters long. No profile was created.\");\r\n            return;\r\n        }\r\n\r\n        // Check if age is a positive integer\r\n        try {\r\n            int ageInt = Integer.parseInt(age);\r\n            if (ageInt <= 0) {\r\n                System.out.println(\r\n                        \"'\" + age + \"' is an invalid age, please provide a positive whole number only. No profile was created for \" + userName + \".\");\r\n                return;\r\n            }\r\n        } catch (NumberFormatException e) {\r\n            System.out.println(\r\n                    \"'\" + age + \"' is an invalid age, please provide a positive whole number only. No profile was created for \" + userName + \".\");\r\n            return;\r\n        }\r\n\r\n        // Add the new profile to the database\r\n        ClientProfile newProfile = new ClientProfile(userName, age);\r\n        database.add(newProfile);\r\n\r\n        // Print success message\r\n        System.out.println(\"New profile created for \" + newProfile.getTitleCaseUsername() + \" with age \"\r\n                + newProfile.getAge() + \".\");\r\n    }\r\n}\r\n\r\nclass ClientProfile {\r\n    private final String username;\r\n    private final String age;\r\n\r\n    public ClientProfile(String username, String age) {\r\n        this.username = username;\r\n        this.age = age;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public String getAge() {\r\n        return age;\r\n    }\r\n\r\n    public String getTitleCaseUsername() {\r\n        return username.substring(0, 1).toUpperCase() + username.substring(1).toLowerCase();\r\n    }\r\n}\r\n```"      },      "finish_reason": "stop"    }  ],  "usage": {    "prompt_tokens": 6798,    "completion_tokens": 654,    "total_tokens": 7452  }}
