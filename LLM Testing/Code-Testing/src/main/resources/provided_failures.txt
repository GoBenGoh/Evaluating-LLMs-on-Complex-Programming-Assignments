@Test
public void T2_05_unload_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", UNLOAD_PROFILE, PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("Profile unloaded for Jenny.");
    assertContains("1: Jordan, 21");
    assertContains("2: Tom, 25");
    assertContains("3: Jenny, 23");
    assertDoesNotContain("*** 1: Jordan, 21", true);
    assertDoesNotContain("*** 2: Tom, 25", true);
    assertDoesNotContain("*** 3: Jenny, 23", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"Profile unloaded for Jenny."
	at nz.ac.auckland.se281.MainTest$Task2.T2_05_unload_profile(MainTest.java:135)

@Test
public void T2_06_unload_invalid_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "jen", UNLOAD_PROFILE, PRINT_DB));
    assertContains("No profile is currently loaded.");
    assertContains("1: Jordan, 21");
    assertContains("2: Tom, 25");
    assertContains("3: Jenny, 23");
    assertDoesNotContain("*** 1: Jordan, 21", true);
    assertDoesNotContain("*** 2: Tom, 25", true);
    assertDoesNotContain("*** 3: Jenny, 23", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"No profile is currently loaded."
	at nz.ac.auckland.se281.MainTest$Task2.T2_06_unload_invalid_profile(MainTest.java:150)

@Test
public void T2_04_load_profile_switch_profiles() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "tom", LOAD_PROFILE, "jenny", PRINT_DB));
    assertContains("Profile loaded for Tom.");
    assertContains("Profile loaded for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21");
    assertContains("2: Tom, 25");
    assertContains("*** 3: Jenny, 23");
    assertDoesNotContain("*** 1: Jordan, 21", true);
    assertDoesNotContain("*** 2: Tom, 25", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"Profile loaded for Tom."
	at nz.ac.auckland.se281.MainTest$Task2.T2_04_load_profile_switch_profiles(MainTest.java:119)

@Test
public void T2_07_delete_profile_found() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, DELETE_PROFILE, "jordan", PRINT_DB));
    assertContains("Profile deleted for Jordan.");
    assertContains("Database has 2 profiles:");
    assertContains("1: Tom, 25");
    assertContains("2: Jenny, 23");
    assertDoesNotContain("Jordan, 21", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"Profile deleted for Jordan."
	at nz.ac.auckland.se281.MainTest$Task2.T2_07_delete_profile_found(MainTest.java:165)

@Test
public void T2_02_load_profile_not_found() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Alex"));
    assertContains("No profile found for Alex. Profile not loaded.");
    assertDoesNotContain("Profile loaded for Alex.", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"No profile found for Alex. Profile not loaded."
	at nz.ac.auckland.se281.MainTest$Task2.T2_02_load_profile_not_found(MainTest.java:98)

@Test
public void T2_08_delete_profile_while_loaded() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", DELETE_PROFILE, "jenny", PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("Cannot delete profile for Jenny while loaded. No profile was deleted.");
    assertDoesNotContain("Profile deleted for Jenny", true);
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21");
    assertContains("2: Tom, 25");
    assertContains("3: Jenny, 23");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"Cannot delete profile for Jenny while loaded. No profile was deleted."
	at nz.ac.auckland.se281.MainTest$Task2.T2_08_delete_profile_while_loaded(MainTest.java:179)

@Test
public void T2_03_load_profile_found_display() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", PRINT_DB));
    assertContains("Profile loaded for Tom.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21");
    assertContains("*** 2: Tom, 25");
    assertContains("3: Jenny, 23");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"*** 2: Tom, 25"
	at nz.ac.auckland.se281.MainTest$Task2.T2_03_load_profile_found_display(MainTest.java:110)

@Test
public void T3_02_add_home_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 1 policy");
    assertContains("New home policy created for Jenny.");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $20000)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"1: Jordan, 21, 0 policies"
	at nz.ac.auckland.se281.MainTest$Task3.T3_02_add_home_policy_loaded_profile(MainTest.java:217)

@Test
public void T3_07_two_policies_one_profile_ignore_zero_policy_total_costs() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, LOAD_PROFILE, "Jenny", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "no"), UNLOAD_PROFILE, PRINT_DB));
    assertContains("2: Tom, 25, 2 policies for a total of $22950");
    assertContains("3: Jenny, 23, 1 policy for a total of $8250");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5500 -> $4950)");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $8250 -> $8250)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"2: Tom, 25, 2 policies for a total of $22950"
	at nz.ac.auckland.se281.MainTest$Task3.T3_07_two_policies_one_profile_ignore_zero_policy_total_costs(MainTest.java:349)

@Test
public void T3_05_three_policies_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_HOME, options("1000000", "20 Queen Street", "no"), POLICY_LIFE, options("1000000"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 3 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $16000)");
    assertContains("Home Policy (20 Queen Street, Sum Insured: $1000000, Premium: $10000 -> $8000)");
    assertContains("Life Policy (Sum Insured: $1000000, Premium: $12300 -> $9840)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_05_three_policies_one_profile(MainTest.java:292)

@Test
public void T3_03_add_car_policy_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Tom", POLICY_CAR, options("55000", "Subaru Impreza", "SUB123", "yes"), PRINT_DB));
    assertContains("Profile loaded for Tom.");
    assertContains("New car policy created for Tom.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("*** 2: Tom, 25, 1 policy");
    assertContains("3: Jenny, 23, 0 policies");
    assertContains("Car Policy (Subaru Impreza, Sum Insured: $55000, Premium: $5580 -> $5580)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New car policy created for Tom."
	at nz.ac.auckland.se281.MainTest$Task3.T3_03_add_car_policy_loaded_profile(MainTest.java:239)

@Test
public void T3_01_cannot_add_policy_without_loaded_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, POLICY_HOME, options("1000000", "20 Symonds Street", "yes")));
    assertContains("Need to load a profile in order to create a policy.");
    assertDoesNotContain("New home policy created", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"Need to load a profile in order to create a policy."
	at nz.ac.auckland.se281.MainTest$Task3.T3_01_cannot_add_policy_without_loaded_profile(MainTest.java:199)

@Test
public void T3_06_life_policy_over_age_limit() throws Exception {
    runCommands(CREATE_PROFILE, "Jenny", 101, LOAD_PROFILE, "Jenny", POLICY_LIFE, options("100000"), UNLOAD_PROFILE, PRINT_DB);
    assertContains("Profile loaded for Jenny.");
    assertContains("Jenny is over the age limit. No policy was created.");
    assertContains("Database has 1 profile:");
    assertContains("1: Jenny, 101, 0 policies");
    assertDoesNotContain("New life policy created for Jenny.", true);
    assertDoesNotContain("Life Policy (Sum Insured", true);
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"Jenny is over the age limit. No policy was created."
	at nz.ac.auckland.se281.MainTest$Task3.T3_06_life_policy_over_age_limit(MainTest.java:321)

@Test
public void T3_04_two_different_policies_home_life_one_profile() throws Exception {
    runCommands(unpack(CREATE_SOME_CLIENTS, LOAD_PROFILE, "Jenny", POLICY_HOME, options("1000000", "20 Symonds Street", "yes"), POLICY_LIFE, options("1000000"), PRINT_DB));
    assertContains("Profile loaded for Jenny.");
    assertContains("New home policy created for Jenny.");
    assertContains("New life policy created for Jenny.");
    assertContains("Database has 3 profiles:");
    assertContains("1: Jordan, 21, 0 policies");
    assertContains("2: Tom, 25, 0 policies");
    assertContains("*** 3: Jenny, 23, 2 policies");
    assertContains("Home Policy (20 Symonds Street, Sum Insured: $1000000, Premium: $20000 -> $18000)");
    assertContains("Life Policy (Sum Insured: $1000000, Premium: $12300 -> $11070)");
}
java.lang.AssertionError: 
The test is expecting the following output in the console, but it was not there: 
	"New home policy created for Jenny."
	at nz.ac.auckland.se281.MainTest$Task3.T3_04_two_different_policies_home_life_one_profile(MainTest.java:263)

